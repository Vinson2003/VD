@using VD.Helper;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Button Create -->
<div class="top-panel">
    <button type="button" class="btn btn-primary float-right mb-3" data-bs-toggle="modal" data-bs-target="#AdminAddModal">Create</button>
</div>

<!-- Data Table List -->
<table id="AdminList" class="display" style="width:100%">
    <thead class="table-success">
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Status</th>
            <th>Role</th>
            <th>Edit</th>
            <th>Change Password</th>
            <th>Update Account</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Status</th>
            <th>Role</th>
            <th>Edit</th>
            <th>Change Password</th>
            <th>Update Account</th>
        </tr>
    </tfoot>
</table>

@await Html.PartialAsync("~/Views/Admin/Modal/UpdateAccModal.cshtml")
@await Html.PartialAsync("~/Views/Admin/Modal/AddModal.cshtml")
@await Html.PartialAsync("~/Views/Admin/Modal/EditModal.cshtml")
@await Html.PartialAsync("~/Views/Admin/Modal/ChangePasswordModal.cshtml")

@section Scripts {
    @await Html.PartialAsync("~/Views/Admin/JS/ModalAddJS.cshtml")
    @await Html.PartialAsync("~/Views/Admin/JS/ModalChangePasswordJS.cshtml")
    @await Html.PartialAsync("~/Views/Admin/JS/ModalEditJS.cshtml")
    @await Html.PartialAsync("~/Views/Admin/JS/ModalUpdateAccJS.cshtml")
    <script>
        var AdminTab
        $(document).ready(function () {
            reloadTable();
        });

        function reloadTable(){
            if(!AdminTab){
                AdminTab = $('#AdminList').DataTable({
                    "scrollX": true,
                    "processing": true,
                    "filter": false,
                    "stateSave": true,
                    "responsive": true,
                    "searching": false,
                    "serverSide": true,
                    "bDestroy": true,
                    "dom": 'Bfrtip',
                    "ajax": {
                        "url": "@Url.Action("Admin_Read", "Admin")",
                        "type": "POST",
                        'datatype': 'json',
                    },
                    "columns": [
                        { "data": "username" },
                        { "data": "email" },
                        { "data": "status" },
                        { "data": "role" },
                        {
                            "data": "id",
                            "render": function (d, t, f, m) {
                                return "<div><a type='button' class='btn btn-warning btn-sm' onclick='editdata(" + m.row + ")'>Edit</a></div>";
                            }
                        },
                        {
                            "data": "id",
                            "render": function (d, t, f, m) {
                                return "<div><a type='button' class='btn btn-info btn-sm' onclick='changepassword(" + m.row + ")'>Change Password</a></div>";
                            }
                        },
                        {
                            "data": "id",
                            "render": function (d, t, f, m) {
                                return "<div><a type='button' class='btn btn-success btn-sm' onclick='updateaccount(" + m.row + ")'>Update Account</a></div>";
                            }
                        },
                    ],
                });
            } else {
                AdminTab.ajax.url("@Url.Action("Admin_Read", "Admin")").load();
            }
        }
    </script>

    <script>
        new DataTable('#AdminList', {
            initComplete: function () {
                this.api().columns().every(function () {
                    let column = this;
                    let title = column.header().textContent;

                    // Create input element
                    let input = document.createElement('input');
                    input.placeholder = title;
                    column.header().replaceChildren(input);

                    // Event listener for user input
                    input.addEventListener('keyup', () => {
                        if (column.search() !== this.value) {
                            column.search(input.value).draw();
                        }
                    });
                });
            }
        });
    </script>
}